#include <iostream>

using namespace std;

int main()
{
    /*继承这个概念很好理解,比如说父亲是个高个子,儿子也是个高个子,那么儿
子就是继承了父亲的高个遗传信息,更加精确的说法是儿子从父亲那里首先继承了
"人"的全部特性,然后又继承了父亲特有的高个信息。因此这里就出现了两层继承
第1层是儿子继承了所有人类共有的特性,能站立行走,能说话活,能思考,能创造和
使用工具:第2层是儿子继承了人类中的一员--父亲的某个特征,个子较其他人高
一些。我们将这3层关系用图形来简单描述一下,就是:
                                            人类
                                            父类
                                            儿子
在这里人类是基类,又叫父类,父亲是人类的一个子类,由于他除了具备人类
的共有特征之外,还衍生出了自己的一个特征--个子比其他人要高,因此他又叫派生类。
儿子是父亲的子类,他也继承了父亲一些基本特征,并且他还衍生出了自己的一些特征,
比如眼睛可能要比父亲大一些,身材也要比父亲强壮些,我们把他创建这些新特征的过程叫做
派生,由于他也是一个类--儿子类,并且是从父亲类那里派生出来的,所以我们把他叫做父
亲的子类,又叫派生类。
可查看图示继承派生关系图1.png

继承和派生的实现：
我们仍旧拿12.1节的父子来做例子,该例中儿子继承了父亲作为人类的一些基本特征,
然后又继承了父亲的高个特征,这时两人的关系是从属关系,而不是构造关系,即父亲构造儿
子,或者儿子构造父亲。但是假如儿子在继承父亲的基本特征的基础上修改了一部分新的特征
或者添加了一些新的特征,比如说儿子变成了矮个子,又戴了一副博士伦的眼镜,那么我们就
要在儿子这个派生类中做如下几种变化:
(1)增加新的成员变量--博士伦;
(2)增加新的成员函数--戴眼镜;
(3)重新定义已有的成员函数--个头;
(4)改变已有成员的属性--由高个修改为矮个。



*/ 
    return 0;
}
