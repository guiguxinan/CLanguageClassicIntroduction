#include <iostream>

using namespace std;

int main()
{
   cout<<"背景：\n";
   cout<<"要认识面向对象程序语言,首先介绍最早期的程序语言。\n最早期的程序语言是机器语言,是由'0'和'1'组成,由于这种语言要求编程者非常熟悉计算机的细节,因此一般的技术人员很难掌握。\n20世纪50年代,出现了汇编语言,它可以用一些简单的语句来代替枯燥的机器语言,因此编程效率前进了一大步。\n汇编语言也有它的缺点,例如,它的大部分语言比较难懂,和机器关系比较严密,并且需要相应的翻译程序将其翻译成机器语言才能执行。这种翻译程序科你为解释程序。\n高级语言诞生于20世纪50年代末期,代表有PASCAL和C语言,用它们编写的代码可读性非常强,易于交流,因此应用广泛,其思想是将一个程序分成若干个过程,然后写出每个过程的算法。\n这称为面向过程语言,使用者可以不必再像使用用汇编语言那样了解计算机的内部逻辑,而将主要精力集中在解决问题上。\n但是这类语言也有其缺点,那就是程序的可重用性差,并且维护难,程序员经常因为要在程序上多加一个新功能而重写该核程序,或者为将数据与和这组数据相关的操作分开而做许多工作。\n这就如同要设计一个新型的为发动机,汽车工程师通常不会再重新制造一个,而是将原来的发动机改装,会变成一个新型的发动机:但如果由面向过程的软件工程师来造,那么他就要重新设计一辆汽车了。\n面向对象程序语言就是为解决这两个问题而设计的,它将自然界的所有事物都看作是不同的实体,也就是对象。每种对象都有自己特有的状态和行为。这些些不同的对象之间相互联系而又相互作用,从而构成千变万化的大自然。\n在面向对象程序设计中,程序员不需要考虑数据结构和操作函数,只需要考虑对象即可。\n例如,一个人身高190cm,体重80kg,白皮肤,蓝眼睛,大大鼻子,这都是构成他的主要数据也是他与别人区别的特征,但现在,我们不考虑他的这些数据和特待征,只需要把他看作是自然界的一个实体,考虑他是怎么样的一个人以及他能够做什么即可。\n";
   return 0;
}
